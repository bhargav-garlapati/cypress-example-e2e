steps:
  # Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', '${_REPO_URL}', '--branch', '${_BRANCH}', '.']

  # Install dependencies
  - name: 'node:20'
    args: ['npm', 'ci']

  # Get secrets from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=cypress-environment-variables > cypress.env.json

  # Run Cypress tests with parallelization
  - name: 'cypress/included:14.3.0'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Set environment variable for the environment
        export CYPRESS_ENV=${_ENV}
        
        # Determine spec pattern
        if [ "${_SPECS}" != "all" ]; then
          local_spec_pattern="${_SPECS}"
        else
          local_spec_pattern="cypress/e2e/**/*.cy.js"
        fi
        
        # Determine tags
        if [ -n "${_TAGS}" ]; then
          local_tag_param="--tag gcp,cloud-build,container-${_CONTAINER_IDX},${_TAGS}"
        else
          local_tag_param="--tag gcp,cloud-build,container-${_CONTAINER_IDX}"
        fi
        
        npx cypress run \
          --spec "$local_spec_pattern" \
          --browser chrome \
          --headless \
          --record \
          --parallel \
          --ci-build-id "${_COMMON_BUILD_ID}" \
          --group "cloud-build-parallel" \
          $local_tag_param
    env:
      - 'CYPRESS_RECORD_KEY=${_CYPRESS_RECORD_KEY}'
      - 'CI_PLATFORM=gcp'
      - 'CI_SERVICE=cloud-build'
      - 'CONTAINER_IDX=${_CONTAINER_IDX}'
      - 'TOTAL_CONTAINERS=${_TOTAL_CONTAINERS}'
      - 'PERCY_TOKEN=${_PERCY_TOKEN}'
      - 'PROJECT_TOKEN=${_PROJECT_TOKEN}'
      - 'CYPRESS_excludeSpecPattern=**/smart-ui-tests/**'
      - 'CYPRESS_grepOmitFiltered=true'

  # Create container-specific results directory
  - name: 'debian:stable-slim'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        mkdir -p cypress/results/json
        cp -r cypress/results/* cypress/results/json/ 2>/dev/null || true
        echo "Created cypress/results/json directory for test reports"

  # Upload results to GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', 'cypress/results/json', 'gs://cypress-example-e2e-results/${BUILD_ID}/cypress/results/']

substitutions:
  _ENV: 'production'  # Default environment
  _SPECS: 'all'       # Default specs to run
  _CONTAINER_IDX: '1'  # Default container index
  _TOTAL_CONTAINERS: '2'  # Default total containers
  _COMMON_BUILD_ID: ''  # Common build ID for all containers
  _REPO_URL: 'https://github.com/bhargav-garlapati/cypress-example-e2e.git'  # Default repo URL
  _BRANCH: 'main'  # Default branch
  _CYPRESS_RECORD_KEY: ''  # Default empty value, will be overridden by GitHub Actions
  _TAGS: ''  # Default empty value for tags
  _PERCY_TOKEN: ''  # Default empty value for Percy token
  _PROJECT_TOKEN: ''  # Default empty value for SmartUI token

timeout: 1800s  # 30 minutes
