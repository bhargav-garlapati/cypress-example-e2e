steps:
  # Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', '${_REPO_URL}', '--branch', '${_BRANCH}', '.']

  # Install dependencies
  - name: 'node:20'
    args: ['npm', 'ci']

  # Get secrets from Secret Manager
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud secrets versions access latest --secret=cypress-environment-variables > cypress.env.json

  # Run Cypress tests
  - name: 'cypress/included:14.3.0'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ "${_SPECS}" != "all" ]; then
          ENV=${_ENV} cypress run --spec ${_SPECS} --browser chrome --headless --record --parallel --ci-build-id ${BUILD_ID} --group gcp-parallel-group --tag gcp,cloud-build,container-${_CONTAINER_IDX}
        else
          ENV=${_ENV} cypress run --spec "cypress/e2e/*cy.js" --browser chrome --headless --record --parallel --ci-build-id ${BUILD_ID} --group gcp-parallel-group --tag gcp,cloud-build,container-${_CONTAINER_IDX}
        fi

  # Create results directory if it doesn't exist
  - name: 'debian:stable-slim'
    args: ['mkdir', '-p', 'cypress/results']

  # Upload results to GCS
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', 'cypress/results', 'gs://cypress-example-e2e-results/${BUILD_ID}/']

substitutions:
  _ENV: 'production'  # Default environment
  _SPECS: 'all'       # Default specs to run
  _CONTAINER_IDX: '1'  # Default container index
  _REPO_URL: 'https://github.com/bhargav-garlapati/cypress-example-e2e.git'  # Default repo URL
  _BRANCH: 'main'  # Default branch

timeout: 1800s  # 30 minutes
